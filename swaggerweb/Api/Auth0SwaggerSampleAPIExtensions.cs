// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Services
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.Rest;
    using Models;

    /// <summary>
    /// Extension methods for Auth0SwaggerSampleAPI.
    /// </summary>
    public static partial class Auth0SwaggerSampleAPIExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IList<MyModel> ValuesGet(this IAuth0SwaggerSampleAPI operations)
            {
                return Task.Factory.StartNew(s => ((IAuth0SwaggerSampleAPI)s).ValuesGetAsync(), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<MyModel>> ValuesGetAsync(this IAuth0SwaggerSampleAPI operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ValuesGetWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='item'>
            /// </param>
            public static MyModel ValuesPost(this IAuth0SwaggerSampleAPI operations, MyModel item = default(MyModel))
            {
                return Task.Factory.StartNew(s => ((IAuth0SwaggerSampleAPI)s).ValuesPostAsync(item), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='item'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<MyModel> ValuesPostAsync(this IAuth0SwaggerSampleAPI operations, MyModel item = default(MyModel), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ValuesPostWithHttpMessagesAsync(item, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static MyModel ValuesByIdGet(this IAuth0SwaggerSampleAPI operations, string id)
            {
                return Task.Factory.StartNew(s => ((IAuth0SwaggerSampleAPI)s).ValuesByIdGetAsync(id), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<MyModel> ValuesByIdGetAsync(this IAuth0SwaggerSampleAPI operations, string id, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ValuesByIdGetWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='item'>
            /// </param>
            public static void ValuesByIdPut(this IAuth0SwaggerSampleAPI operations, string id, MyModel item = default(MyModel))
            {
                Task.Factory.StartNew(s => ((IAuth0SwaggerSampleAPI)s).ValuesByIdPutAsync(id, item), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='item'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ValuesByIdPutAsync(this IAuth0SwaggerSampleAPI operations, string id, MyModel item = default(MyModel), CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.ValuesByIdPutWithHttpMessagesAsync(id, item, null, cancellationToken).ConfigureAwait(false);
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static void ValuesByIdDelete(this IAuth0SwaggerSampleAPI operations, string id)
            {
                Task.Factory.StartNew(s => ((IAuth0SwaggerSampleAPI)s).ValuesByIdDeleteAsync(id), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ValuesByIdDeleteAsync(this IAuth0SwaggerSampleAPI operations, string id, CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.ValuesByIdDeleteWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false);
            }

    }
}
